---
import { fetchDecoratorReact } from '@navikt/nav-dekoratoren-moduler/ssr';
import type { Language } from '../language/language';
import { text } from '../language/text';
import { getDecoratorEnvironment } from '../utils/server/environment';
import { baseUrl } from '../utils/server/urls';
import styles from './Layout.module.css';

const language = Astro.currentLocale as Language;

const Decorator = await fetchDecoratorReact({
  env: getDecoratorEnvironment(),
  params: {
    context: 'privatperson',
    language: language,
    breadcrumbs: [
      {
        title: text.minSide[language],
        url: baseUrl,
      },
      {
        title: text.utkast[language],
        url: baseUrl,
      },
    ],
    availableLanguages: [
      {
        locale: 'nb',
        url: `${baseUrl}utkast/nb`,
        handleInApp: false,
      },
      {
        locale: 'en',
        url: `${baseUrl}utkast/en`,
        handleInApp: false,
      },
      {
        locale: 'nn',
        url: `${baseUrl}utkast/nn`,
        handleInApp: false,
      },
    ],
  },
});
---

<!doctype html>
<html lang={language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Utkast</title>
    <link
      rel="preload"
      href="https://cdn.nav.no/aksel/@navikt/ds-css/6.16.2/index.min.css"
      as="style"
    />
    <link
      rel="stylesheet"
      href="https://cdn.nav.no/aksel/@navikt/ds-css/6.16.2/index.min.css"
    />
    <Decorator.HeadAssets />
  </head>
  <body class="main">
    <Decorator.Header />
    <div class={styles.container}>
      <slot />
    </div>
    <Decorator.Footer />
    <Decorator.Scripts />
  </body>
</html>

<script>
  import { getCurrentConsent } from '@navikt/nav-dekoratoren-moduler';
  import { getEnvironment } from '@src/utils/client/urls';

  interface Consent {
    consent: {
      analytics: boolean;
      surveys: boolean;
    };
  }

  const { consent }: Consent = getCurrentConsent();

  if (consent.analytics) {
    const script = document.createElement('script');
    const websiteId =
      getEnvironment() === 'production'
        ? '28461d11-25ed-4e27-bfc6-6994e6dffb63'
        : '8dfbb064-8462-460c-8a21-06a5bcf932de';

    script.defer = true;
    script.src = 'https://cdn.nav.no/team-researchops/sporing/sporing.js';
    script.setAttribute('data-astro-rerun', '');
    script.setAttribute('data-host-url', 'https://umami.nav.no');
    script.setAttribute('data-website-id', websiteId);

    document.head.appendChild(script);
  }
</script>
