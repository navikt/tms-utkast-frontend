---
import type { Language } from "../../language/language";
import dayjs from "dayjs";
import { utkastApiUrl } from "../../utils/server/urls";
import Pencil from "../../img/Pencil";
import { BodyLong, BodyShort, Heading, Alert } from "@navikt/ds-react";
import { text } from "../../language/text";
import { ChevronRightIcon } from "@navikt/aksel-icons";
import { sortByOpprettet } from "../../utils/server/sorting";
import { getOboToken } from "../../utils/server/token";
import type { UtkastElement } from "./UtkastTypes.ts";
import UtkastEmpty from "../utkast-empty/UtkastEmpty.astro";
import styles from "./Utkast.module.css";
import Error from "../error/Error.astro";

interface Props {
    language:Language;
}
const { language } = Astro.props;

const oboToken = await getOboToken(Astro.locals.token);
let isError = false;

const data = await fetch(utkastApiUrl, {
    method: "GET",
    headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Bearer ${oboToken}`,
    },
}).then((response) => {
        if (!response.ok) {
            console.error(`Error, fetch failed with status: ${response.status}`)
            isError = true
        }

        return response.json();
}).catch((error) => {
    console.error(`Error, fetch failed: ${error}`);
    isError = true
});

const dateFormatter = (date: string) => dayjs(date).format("DD.MM.YYYY");
---

<>
    {isError ? <Error language={language} />:
    data?.length == 0 ? <UtkastEmpty language={language} /> :
            <ul class={styles.utkastList}>
                {data?.sort(sortByOpprettet).map((utkast: UtkastElement) => (
                        <li class={styles.container}>
                            <a href={utkast.link} class={styles.link}>
                            <div class={styles.top}>
                                    <div class={styles.wrapper}>
                                        <div class={styles.ikon}>
                                            <Pencil aria-hidden={true} />
                                        </div>
                                        <BodyShort size="medium" className={styles.utkastNavn}>
                                            {text.utkast[language]}
                                        </BodyShort>
                                    </div>
                                    <div class={`${styles.wrapper} ${styles.endretTekst}`}>
                                        <BodyLong size="small">{text.opprettet[language] + dateFormatter(utkast.opprettet)}</BodyLong>
                                        <ChevronRightIcon className={styles.chevron} fontSize="1.25rem" aria-hidden={true} aria-label="Chevron" />
                                    </div>
                                </div>
                                <div class={styles.bottom}>
                                    <Heading size="xsmall" level="2" className={styles.utkastTittel}>
                                        {utkast.tittel}
                                    </Heading>
                                </div>
                            </a>
                        </li>
                ))}
            </ul>}
</>




